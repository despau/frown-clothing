{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roman\\\\Documents\\\\courses\\\\UDEMY\\\\React\\\\Yihua\\\\frown-clothing\\\\client\\\\src\\\\pages\\\\collection\\\\collection.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // import { firestore } from './../../firebase/firebase.utils';\n\nimport CollectionItem from '../../components/collection-item/collection-item.component';\nimport { selectCollection } from '../../redux/shop/shop.selectors';\nimport { CollectionPageContainer, CollectionTitle, CollectionItemsContainer } from './collection.styles';\n\nconst CollectionPage = ({\n  collection\n}) => {\n  // useEffect(() => {\n  //   console.log(\"I am subscribing\");\n  //   const unsubscribeFromCollections = firestore.collection('collections').onSnapshot(async snapshot => console.log(snapshot))\n  //   //this function is for componentWillUnmount. call it clean up function\n  //   return () => {\n  //     console.log(\"I am UNsubscribing\");\n  //     unsubscribeFromCollections();\n  //   }\n  // }, [])\n  const title = collection.title,\n        items = collection.items;\n  return React.createElement(CollectionPageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(CollectionTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, title), React.createElement(CollectionItemsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["C:/Users/roman/Documents/courses/UDEMY/React/Yihua/frown-clothing/client/src/pages/collection/collection.component.jsx"],"names":["React","connect","CollectionItem","selectCollection","CollectionPageContainer","CollectionTitle","CollectionItemsContainer","CollectionPage","collection","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AAEA,OAAOC,cAAP,MAA2B,4DAA3B;AAEA,SAASC,gBAAT,QAAiC,iCAAjC;AAEA,SACEC,uBADF,EAEEC,eAFF,EAGEC,wBAHF,QAIO,qBAJP;;AAQA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACzC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAVyC,QAWjCC,KAXiC,GAWhBD,UAXgB,CAWjCC,KAXiC;AAAA,QAW1BC,KAX0B,GAWhBF,UAXgB,CAW1BE,KAX0B;AAYzC,SACE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBD,KAAlB,CADF,EAEE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,GAAN,CAAUC,IAAI,IACb,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAUD,CAtBD;;AAwBA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5CR,EAAAA,UAAU,EAAEL,gBAAgB,CAACa,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD;AADgC,CAAtB,CAAxB;;AAIA,eAAed,OAAO,CAACa,eAAD,CAAP,CAAyBP,cAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// import { firestore } from './../../firebase/firebase.utils';\r\n\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\n\r\nimport { selectCollection } from '../../redux/shop/shop.selectors';\r\n\r\nimport {\r\n  CollectionPageContainer,\r\n  CollectionTitle,\r\n  CollectionItemsContainer\r\n} from './collection.styles';\r\n\r\n\r\n\r\nconst CollectionPage = ({ collection }) => {\r\n  // useEffect(() => {\r\n  //   console.log(\"I am subscribing\");\r\n  //   const unsubscribeFromCollections = firestore.collection('collections').onSnapshot(async snapshot => console.log(snapshot))\r\n\r\n  //   //this function is for componentWillUnmount. call it clean up function\r\n  //   return () => {\r\n  //     console.log(\"I am UNsubscribing\");\r\n  //     unsubscribeFromCollections();\r\n  //   }\r\n  // }, [])\r\n  const { title, items } = collection;\r\n  return (\r\n    <CollectionPageContainer>\r\n      <CollectionTitle>{title}</CollectionTitle>\r\n      <CollectionItemsContainer>\r\n        {items.map(item => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n      </CollectionItemsContainer>\r\n    </CollectionPageContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);\r\n"]},"metadata":{},"sourceType":"module"}